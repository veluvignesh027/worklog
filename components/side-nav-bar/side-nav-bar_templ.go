// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package sidenavbar

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"example.com/vb/components/form"
	"example.com/vb/database"
	"strconv"
)

func NavStyle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style>\r\n            @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap\");\r\n\r\n            * {\r\n                margin: 0;\r\n                padding: 0;\r\n                outline: none;\r\n                border: none;\r\n                text-decoration: none;\r\n                list-style: none;\r\n                box-sizing: border-box;\r\n                font-family: \"Poppins\", sans-serif;\r\n            }\r\n\r\n            body {\r\n                background: rgb(233, 233, 233);\r\n            }\r\n\r\n            .container {\r\n                display: flex;\r\n                width: 1200px;\r\n                margin: auto;\r\n            }\r\n\r\n            nav {\r\n                position: fixed;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                width: 280px;\r\n                height: 110vh;\r\n                background: #fff;\r\n            }\r\n\r\n            .navbar {\r\n                width: 80%;\r\n                margin: 0 auto;\r\n            }\r\n\r\n            .logo {\r\n                margin: 2rem 0 1rem 0;\r\n                padding-bottom: 3rem;\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n\r\n            .logo img {\r\n                width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n            }\r\n\r\n            .logo h1 {\r\n                margin-left: 1rem;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            ul {\r\n                margin: 0 auto;\r\n            }\r\n\r\n            li {\r\n                padding-bottom: 2rem;\r\n            }\r\n\r\n            li a {\r\n                font-size: 16px;\r\n                color: rgb(85, 83, 83);\r\n            }\r\n\r\n            nav i {\r\n                width: 50px;\r\n                font-size: 18px;\r\n                text-align: center;\r\n            }\r\n\r\n            \r\n            .contents-space {\r\n            padding: 100px;\r\n        }\r\n\r\n        .contents-space button {\r\n            display: inline-block;\r\n            outline: 0;\r\n            appearance: none;\r\n            padding: 0px 12px;\r\n            border: 0px solid transparent;\r\n            border-radius: 4px;\r\n            text-decoration: none;\r\n            cursor: pointer;\r\n            background-color: rgb(9, 128, 76);\r\n            box-shadow: rgb(19 170 82 / 40%) 0px 2px 3px;\r\n            color: rgb(255, 255, 255);\r\n            font-size: 14px;\r\n            font-weight: 400;\r\n            height: 36px;\r\n            transition: all 150ms ease-in-out 0s;\r\n            margin-bottom: 20px;\r\n        }\r\n        .contents-space button:hover{\r\n            background-color: #04AA6D;\r\n            color: white;\r\n        }\r\n\r\n        .task-list{\r\n            width: 1000px;\r\n            height: 60px;\r\n            border: 2%;\r\n            background-color: rgb(255, 255, 255);\r\n            padding: 5px;\r\n            margin: 6px;\r\n            border-radius: 8px;\r\n            box-sizing: border-box;\r\n            border-style:groove;\r\n            cursor: pointer;\r\n        }\r\n        .task-list h2 {\r\n  font-family: \"Kanit\", sans-serif;\r\n  font-weight: 500;\r\n  font-style: normal;\r\n}\r\n\r\n        a {\r\n            color: #080808;\r\n            text-decoration: none;\r\n        }\r\n\r\n        a:hover {\r\n            color: #6abe62;\r\n            text-decoration: none;\r\n            cursor: pointer;\r\n        }\r\n        </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func SideNavigationBar(icon string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body><div class=\"container\"><nav><div class=\"navbar\"><div class=\"logo\"><img src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(icon)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/side-nav-bar/side-nav-bar.templ`, Line: 151, Col: 21}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" alt=\"\"><h1>WorkLog</h1></div><ul><li><a href=\"/home\"><i class=\"fas fa-user\"></i> <span class=\"nav-item\">Dashboard</span></a></li><li><a href=\"http://10.186.173.128:8081\" target=\"_blank\"><i class=\"fas fa-chart-bar\"></i> <span class=\"nav-item\">Repod</span></a></li><li><a href=\"/trivy-board\" target=\"_blank\"><i class=\"fas fa-tasks\"></i> <span class=\"nav-item\">Trivy Board</span></a></li><li><a href=\"/settings\"><i class=\"fas fa-cog\"></i> <span class=\"nav-item\">Settings</span></a></li><li><a href=\"https://login.ext.hpe.com/idp/startSSO.ping?PartnerSpId=aruba-central-qa\" target=\"_blank\"><i class=\"fas fa-robot\"></i> <span class=\"nav-item\">Raven Backend</span></a></li><li><a href=\"https://login.ext.hpe.com/idp/startSSO.ping?PartnerSpId=arubathena-aws\" target=\"_blank\"><i class=\"fas fa-robot\"></i> <span class=\"nav-item\">Panzer Backend</span></a></li><li><a href=\"/help\"><i class=\"fas fa-question-circle\"></i> <span class=\"nav-item\">Help</span></a></li><li><a href=\"/logout\" class=\"logout\"><i class=\"fas fa-sign-out-alt\"></i> <span class=\"nav-item\">Logout</span></a></li></ul></div></nav><div class=\"popup\"><div class=\"closebtn\">&times;</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = form.UserStoryForm().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"contents-space\" id=\"contents\"><button hx-get=\"/getform/userstory\" hx-swap=\"innerHTML\" hx-target=\"#contents\">+ Add Story </button> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, us := range database.UserStories {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"task-list\"><h2><a href=\"#\">US-0")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(us.Number))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/side-nav-bar/side-nav-bar.templ`, Line: 217, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(": ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(us.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/side-nav-bar/side-nav-bar.templ`, Line: 217, Col: 65}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</a></h2></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
